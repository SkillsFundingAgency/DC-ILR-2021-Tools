-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 23 March 2017 15:11
-- Schema Version: ILR ILR 17-18 Version 1
-- =====================================================================================================
if not exists(select schema_id from sys.schemas where name = 'Rulebase')
	exec('create schema Rulebase')
go
--stored procedure to insert all invalid attributes for [Rulebase].Learner into VALFD_ValidationError table.
if object_id('[Rulebase].[FD_Validation_Learner]','p') is not null
	drop procedure [Rulebase].[FD_Validation_Learner]
go
create procedure [Rulebase].[FD_Validation_Learner] as
--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute LearnRefNumber', null, [LearnRefNumber], 'FD_LearnRefNumber_MA'

	from
		[Input].[Learner]

	where
		LearnRefNumber is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute ULN', null, [LearnRefNumber], 'FD_ULN_MA'

	from
		[Input].[Learner]

	where
		ULN is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute Ethnicity', null, [LearnRefNumber], 'FD_Ethnicity_MA'

	from
		[Input].[Learner]

	where
		Ethnicity is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute Sex', null, [LearnRefNumber], 'FD_Sex_MA'

	from
		[Input].[Learner]

	where
		Sex is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute LLDDHealthProb', null, [LearnRefNumber], 'FD_LLDDHealthProb_MA'

	from
		[Input].[Learner]

	where
		LLDDHealthProb is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute PostcodePrior', null, [LearnRefNumber], 'FD_PostcodePrior_MA'

	from
		[Input].[Learner]

	where
		PostcodePrior is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute Postcode', null, [LearnRefNumber], 'FD_Postcode_MA'

	from
		[Input].[Learner]

	where
		Postcode is null

--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for LearnRefNumber is not between 1 and 12 characters long', 'LearnRefNumber=''' + cast(LearnRefNumber as varchar(255)) + ''',length=''' + cast(len(LearnRefNumber) as varchar(255))+'''', [LearnRefNumber], 'FD_LearnRefNumber_AL'

	from
		[Input].[Learner]

	where
		LearnRefNumber is not null
		and len(LearnRefNumber) not between 1 and 12


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for PrevLearnRefNumber is not between 1 and 12 characters long', 'PrevLearnRefNumber=''' + cast(PrevLearnRefNumber as varchar(255)) + ''',length=''' + cast(len(PrevLearnRefNumber) as varchar(255))+'''', [LearnRefNumber], 'FD_PrevLearnRefNumber_AL'

	from
		[Input].[Learner]

	where
		PrevLearnRefNumber is not null
		and len(PrevLearnRefNumber) not between 1 and 12


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for PrevUKPRN is not between 1 and 8 characters long', 'PrevUKPRN=''' + cast(PrevUKPRN as varchar(255)) + ''',length=''' + cast(len(cast(PrevUKPRN as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_PrevUKPRN_AL'

	from
		[Input].[Learner]

	where
		len(cast(PrevUKPRN as varchar)) > 8


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for PMUKPRN is not between 1 and 8 characters long', 'PMUKPRN=''' + cast(PMUKPRN as varchar(255)) + ''',length=''' + cast(len(cast(PMUKPRN as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_PMUKPRN_AL'

	from
		[Input].[Learner]

	where
		len(cast(PMUKPRN as varchar)) > 8


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for ULN is not between 1 and 10 characters long', 'ULN=''' + cast(ULN as varchar(255)) + ''',length=''' + cast(len(cast(ULN as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_ULN_AL'

	from
		[Input].[Learner]

	where
		len(cast(ULN as varchar)) > 10


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for FamilyName is not between 1 and 100 characters long', 'FamilyName=''' + cast(FamilyName as varchar(255)) + ''',length=''' + cast(len(FamilyName) as varchar(255))+'''', [LearnRefNumber], 'FD_FamilyName_AL'

	from
		[Input].[Learner]

	where
		FamilyName is not null
		and len(FamilyName) not between 1 and 100


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for GivenNames is not between 1 and 100 characters long', 'GivenNames=''' + cast(GivenNames as varchar(255)) + ''',length=''' + cast(len(GivenNames) as varchar(255))+'''', [LearnRefNumber], 'FD_GivenNames_AL'

	from
		[Input].[Learner]

	where
		GivenNames is not null
		and len(GivenNames) not between 1 and 100


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for Ethnicity is not between 1 and 2 characters long', 'Ethnicity=''' + cast(Ethnicity as varchar(255)) + ''',length=''' + cast(len(cast(Ethnicity as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_Ethnicity_AL'

	from
		[Input].[Learner]

	where
		len(cast(Ethnicity as varchar)) > 2


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for Sex is not 1 character long', 'Sex=''' + cast(Sex as varchar(255)) + ''',length=''' + cast(len(Sex) as varchar(255))+'''', [LearnRefNumber], 'FD_Sex_AL'

	from
		[Input].[Learner]

	where
		Sex is not null
		and len(Sex) <> 1


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for LLDDHealthProb is not 1 character long', 'LLDDHealthProb=''' + cast(LLDDHealthProb as varchar(255)) + ''',length=''' + cast(len(cast(LLDDHealthProb as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_LLDDHealthProb_AL'

	from
		[Input].[Learner]

	where
		len(cast(LLDDHealthProb as varchar)) > 1


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for NINumber is not between 1 and 9 characters long', 'NINumber=''' + cast(NINumber as varchar(255)) + ''',length=''' + cast(len(NINumber) as varchar(255))+'''', [LearnRefNumber], 'FD_NINumber_AL'

	from
		[Input].[Learner]

	where
		NINumber is not null
		and len(NINumber) not between 1 and 9


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for PriorAttain is not between 1 and 2 characters long', 'PriorAttain=''' + cast(PriorAttain as varchar(255)) + ''',length=''' + cast(len(cast(PriorAttain as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_PriorAttain_AL'

	from
		[Input].[Learner]

	where
		len(cast(PriorAttain as varchar)) > 2


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for Accom is not 1 character long', 'Accom=''' + cast(Accom as varchar(255)) + ''',length=''' + cast(len(cast(Accom as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_Accom_AL'

	from
		[Input].[Learner]

	where
		len(cast(Accom as varchar)) > 1


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for ALSCost is not between 1 and 6 characters long', 'ALSCost=''' + cast(ALSCost as varchar(255)) + ''',length=''' + cast(len(cast(ALSCost as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_ALSCost_AL'

	from
		[Input].[Learner]

	where
		len(cast(ALSCost as varchar)) > 6


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for PlanLearnHours is not between 1 and 4 characters long', 'PlanLearnHours=''' + cast(PlanLearnHours as varchar(255)) + ''',length=''' + cast(len(cast(PlanLearnHours as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_PlanLearnHours_AL'

	from
		[Input].[Learner]

	where
		len(cast(PlanLearnHours as varchar)) > 4


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for PlanEEPHours is not between 1 and 4 characters long', 'PlanEEPHours=''' + cast(PlanEEPHours as varchar(255)) + ''',length=''' + cast(len(cast(PlanEEPHours as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_PlanEEPHours_AL'

	from
		[Input].[Learner]

	where
		len(cast(PlanEEPHours as varchar)) > 4


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for MathGrade is not between 1 and 4 characters long', 'MathGrade=''' + cast(MathGrade as varchar(255)) + ''',length=''' + cast(len(MathGrade) as varchar(255))+'''', [LearnRefNumber], 'FD_MathGrade_AL'

	from
		[Input].[Learner]

	where
		MathGrade is not null
		and len(MathGrade) not between 1 and 4


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for EngGrade is not between 1 and 4 characters long', 'EngGrade=''' + cast(EngGrade as varchar(255)) + ''',length=''' + cast(len(EngGrade) as varchar(255))+'''', [LearnRefNumber], 'FD_EngGrade_AL'

	from
		[Input].[Learner]

	where
		EngGrade is not null
		and len(EngGrade) not between 1 and 4


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for PostcodePrior is not between 1 and 8 characters long', 'PostcodePrior=''' + cast(PostcodePrior as varchar(255)) + ''',length=''' + cast(len(PostcodePrior) as varchar(255))+'''', [LearnRefNumber], 'FD_PostcodePrior_AL'

	from
		[Input].[Learner]

	where
		PostcodePrior is not null
		and len(PostcodePrior) not between 1 and 8


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for Postcode is not between 1 and 8 characters long', 'Postcode=''' + cast(Postcode as varchar(255)) + ''',length=''' + cast(len(Postcode) as varchar(255))+'''', [LearnRefNumber], 'FD_Postcode_AL'

	from
		[Input].[Learner]

	where
		Postcode is not null
		and len(Postcode) not between 1 and 8


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for CampId is greater than the permitted length', 'CampId=''' + CampId + ''',length=''' + cast(len(CampId) as varchar(255)) + '''', [LearnRefNumber], 'FD_CampId_AL'

	from
		[Input].[Learner]

	where
		CampId is not null
		and len(CampId) > 8


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for OTJHours does not contain a value between 0 and 9999', 'OTJHours=''' + cast(OTJHours as varchar(255)) + ''',length=''' + cast(len(cast(OTJHours as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_OTJHours_AL'

	from
		[Input].[Learner]

	where
		OTJHours is not null 
		and OTJHours not between 0 and 9999

--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for AddLine1 is not between 1 and 50 characters long', 'AddLine1=''' + cast(AddLine1 as varchar(255)) + ''',length=''' + cast(len(AddLine1) as varchar(255))+'''', [LearnRefNumber], 'FD_AddLine1_AL'

	from
		[Input].[Learner]

	where
		AddLine1 is not null
		and len(AddLine1) not between 1 and 50


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for AddLine2 is not between 1 and 50 characters long', 'AddLine2=''' + cast(AddLine2 as varchar(255)) + ''',length=''' + cast(len(AddLine2) as varchar(255))+'''', [LearnRefNumber], 'FD_AddLine2_AL'

	from
		[Input].[Learner]

	where
		AddLine2 is not null
		and len(AddLine2) not between 1 and 50


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for AddLine3 is not between 1 and 50 characters long', 'AddLine3=''' + cast(AddLine3 as varchar(255)) + ''',length=''' + cast(len(AddLine3) as varchar(255))+'''', [LearnRefNumber], 'FD_AddLine3_AL'

	from
		[Input].[Learner]

	where
		AddLine3 is not null
		and len(AddLine3) not between 1 and 50


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for AddLine4 is not between 1 and 50 characters long', 'AddLine4=''' + cast(AddLine4 as varchar(255)) + ''',length=''' + cast(len(AddLine4) as varchar(255))+'''', [LearnRefNumber], 'FD_AddLine4_AL'

	from
		[Input].[Learner]

	where
		AddLine4 is not null
		and len(AddLine4) not between 1 and 50


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for TelNo is not between 1 and 18 characters long', 'TelNo=''' + cast(TelNo as varchar(255)) + ''',length=''' + cast(len(TelNo) as varchar(255))+'''', [LearnRefNumber], 'FD_TelNo_AL'

	from
		[Input].[Learner]

	where
		TelNo is not null
		and len(TelNo) not between 1 and 18


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for Email is not between 1 and 100 characters long', 'Email=''' + cast(Email as varchar(255)) + ''',length=''' + cast(len(Email) as varchar(255))+'''', [LearnRefNumber], 'FD_Email_AL'

	from
		[Input].[Learner]

	where
		Email is not null
		and len(Email) not between 1 and 100


--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for PrevUKPRN is not in the valid range 10000000 to 99999999', 'PrevUKPRN=''' + cast(PrevUKPRN as varchar(255)) + '''', [LearnRefNumber], 'FD_PrevUKPRN_AR'

	from
		[Input].[Learner]

	where
		PrevUKPRN not between 10000000 and 99999999

--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for PMUKPRN is not in the valid range 10000000 to 99999999', 'PMUKPRN=''' + cast(PMUKPRN as varchar(255)) + '''', [LearnRefNumber], 'FD_PMUKPRN_AR'

	from
		[Input].[Learner]

	where
		PMUKPRN not between 10000000 and 99999999

--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for ULN is not in the valid range 1000000000 to 9999999999', 'ULN=''' + cast(ULN as varchar(255)) + '''', [LearnRefNumber], 'FD_ULN_AR'

	from
		[Input].[Learner]

	where
		ULN not between 1000000000 and 9999999999

--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for ALSCost is not in the valid range 0 to 999999', 'ALSCost=''' + cast(ALSCost as varchar(255)) + '''', [LearnRefNumber], 'FD_ALSCost_AR'

	from
		[Input].[Learner]

	where
		ALSCost not between 0 and 999999

--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for PlanLearnHours is not in the valid range 0 to 9999', 'PlanLearnHours=''' + cast(PlanLearnHours as varchar(255)) + '''', [LearnRefNumber], 'FD_PlanLearnHours_AR'

	from
		[Input].[Learner]

	where
		PlanLearnHours not between 0 and 9999

--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for PlanEEPHours is not in the valid range 0 to 9999', 'PlanEEPHours=''' + cast(PlanEEPHours as varchar(255)) + '''', [LearnRefNumber], 'FD_PlanEEPHours_AR'

	from
		[Input].[Learner]

	where
		PlanEEPHours not between 0 and 9999

go
--stored procedure to insert all invalid attributes for [Rulebase].ContactPreference into VALFD_ValidationError table.
if object_id('[Rulebase].[FD_Validation_ContactPreference]','p') is not null
	drop procedure [Rulebase].[FD_Validation_ContactPreference]
go
create procedure [Rulebase].[FD_Validation_ContactPreference] as
--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute ContPrefType', null, [LearnRefNumber], 'FD_ContPrefType_MA'

	from
		[Input].[ContactPreference]

	where
		ContPrefType is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute ContPrefCode', null, [LearnRefNumber], 'FD_ContPrefCode_MA'

	from
		[Input].[ContactPreference]

	where
		ContPrefCode is null

--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for ContPrefType is not between 1 and 3 characters long', 'ContPrefType=''' + cast(ContPrefType as varchar(255)) + ''',length=''' + cast(len(ContPrefType) as varchar(255))+'''', [LearnRefNumber], 'FD_ContPrefType_AL'

	from
		[Input].[ContactPreference]

	where
		ContPrefType is not null
		and len(ContPrefType) not between 1 and 3


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for ContPrefCode is not 1 character long', 'ContPrefCode=''' + cast(ContPrefCode as varchar(255)) + ''',length=''' + cast(len(cast(ContPrefCode as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_ContPrefCode_AL'

	from
		[Input].[ContactPreference]

	where
		len(cast(ContPrefCode as varchar)) > 1


	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The ContactPreference has more than the maximum 5 occurrences', 'actual occurrences = ' + cast(count(*) as varchar(255)), min([LearnRefNumber]), 'FD_ContactPreference_EO'

	from
		[Input].[ContactPreference]

	group by
		Learner_Id
	having
		count(*) > 5

go

--stored procedure to insert all invalid attributes for [Rulebase].LLDDandHealthProblem into VALFD_ValidationError table.
if object_id('[Rulebase].[FD_Validation_LLDDandHealthProblem]','p') is not null
	drop procedure [Rulebase].[FD_Validation_LLDDandHealthProblem]
go
create procedure [Rulebase].[FD_Validation_LLDDandHealthProblem] as
--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute LLDDCat', null, [LearnRefNumber], 'FD_LLDDCat_MA'

	from
		[Input].[LLDDandHealthProblem]

	where
		LLDDCat is null

--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for LLDDCat is not between 1 and 2 characters long', 'LLDDCat=''' + cast(LLDDCat as varchar(255)) + ''',length=''' + cast(len(cast(LLDDCat as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_LLDDCat_AL'

	from
		[Input].[LLDDandHealthProblem]

	where
		len(cast(LLDDCat as varchar)) > 2


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for PrimaryLLDD is not 1 character long', 'PrimaryLLDD=''' + cast(PrimaryLLDD as varchar(255)) + ''',length=''' + cast(len(cast(PrimaryLLDD as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_PrimaryLLDD_AL'

	from
		[Input].[LLDDandHealthProblem]

	where
		len(cast(PrimaryLLDD as varchar)) > 1


	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The LLDDandHealthProblem has more than the maximum 22 occurrences', 'actual occurrences = ' + cast(count(*) as varchar(255)), min([LearnRefNumber]), 'FD_LLDDandHealthProblem_EO'

	from
		[Input].[LLDDandHealthProblem]

	group by
		Learner_Id
	having
		count(*) > 22

go

--stored procedure to insert all invalid attributes for [Rulebase].LearnerFAM into VALFD_ValidationError table.
if object_id('[Rulebase].[FD_Validation_LearnerFAM]','p') is not null
	drop procedure [Rulebase].[FD_Validation_LearnerFAM]
go
create procedure [Rulebase].[FD_Validation_LearnerFAM] as
--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute LearnFAMType', null, [LearnRefNumber], 'FD_LearnFAMType_MA'

	from
		[Input].[LearnerFAM]

	where
		LearnFAMType is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute LearnFAMCode', null, [LearnRefNumber], 'FD_LearnFAMCode_MA'

	from
		[Input].[LearnerFAM]

	where
		LearnFAMCode is null

--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for LearnFAMType is not between 1 and 3 characters long', 'LearnFAMType=''' + cast(LearnFAMType as varchar(255)) + ''',length=''' + cast(len(LearnFAMType) as varchar(255))+'''', [LearnRefNumber], 'FD_LearnFAMType_AL'

	from
		[Input].[LearnerFAM]

	where
		LearnFAMType is not null
		and len(LearnFAMType) not between 1 and 3


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for LearnFAMCode is not between 1 and 3 characters long', 'LearnFAMCode=''' + cast(LearnFAMCode as varchar(255)) + ''',length=''' + cast(len(cast(LearnFAMCode as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_LearnFAMCode_AL'

	from
		[Input].[LearnerFAM]

	where
		len(cast(LearnFAMCode as varchar)) > 3


	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The LearnerFAM has more than the maximum 17 occurrences', 'actual occurrences = ' + cast(count(*) as varchar(255)), min([LearnRefNumber]), 'FD_LearnerFAM_EO'

	from
		[Input].[LearnerFAM]

	group by
		Learner_Id
	having
		count(*) > 17

go

--stored procedure to insert all invalid attributes for [Rulebase].ProviderSpecLearnerMonitoring into VALFD_ValidationError table.
if object_id('[Rulebase].[FD_Validation_ProviderSpecLearnerMonitoring]','p') is not null
	drop procedure [Rulebase].[FD_Validation_ProviderSpecLearnerMonitoring]
go
create procedure [Rulebase].[FD_Validation_ProviderSpecLearnerMonitoring] as
--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute ProvSpecLearnMonOccur', null, [LearnRefNumber], 'FD_ProvSpecLearnMonOccur_MA'

	from
		[Input].[ProviderSpecLearnerMonitoring]

	where
		ProvSpecLearnMonOccur is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute ProvSpecLearnMon', null, [LearnRefNumber], 'FD_ProvSpecLearnMon_MA'

	from
		[Input].[ProviderSpecLearnerMonitoring]

	where
		ProvSpecLearnMon is null

--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for ProvSpecLearnMonOccur is not 1 character long', 'ProvSpecLearnMonOccur=''' + cast(ProvSpecLearnMonOccur as varchar(255)) + ''',length=''' + cast(len(ProvSpecLearnMonOccur) as varchar(255))+'''', [LearnRefNumber], 'FD_ProvSpecLearnMonOccur_AL'

	from
		[Input].[ProviderSpecLearnerMonitoring]

	where
		ProvSpecLearnMonOccur is not null
		and len(ProvSpecLearnMonOccur) <> 1


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for ProvSpecLearnMon is not between 1 and 20 characters long', 'ProvSpecLearnMon=''' + cast(ProvSpecLearnMon as varchar(255)) + ''',length=''' + cast(len(ProvSpecLearnMon) as varchar(255))+'''', [LearnRefNumber], 'FD_ProvSpecLearnMon_AL'

	from
		[Input].[ProviderSpecLearnerMonitoring]

	where
		ProvSpecLearnMon is not null
		and len(ProvSpecLearnMon) not between 1 and 20


	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The ProviderSpecLearnerMonitoring has more than the maximum 2 occurrences', 'actual occurrences = ' + cast(count(*) as varchar(255)), min([LearnRefNumber]), 'FD_ProviderSpecLearnerMonitoring_EO'

	from
		[Input].[ProviderSpecLearnerMonitoring]

	group by
		Learner_Id
	having
		count(*) > 2

go

--stored procedure to insert all invalid attributes for [Rulebase].LearnerEmploymentStatus into VALFD_ValidationError table.
if object_id('[Rulebase].[FD_Validation_LearnerEmploymentStatus]','p') is not null
	drop procedure [Rulebase].[FD_Validation_LearnerEmploymentStatus]
go
create procedure [Rulebase].[FD_Validation_LearnerEmploymentStatus] as
--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute EmpStat', null, [LearnRefNumber], 'FD_EmpStat_MA'

	from
		[Input].[LearnerEmploymentStatus]

	where
		EmpStat is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute DateEmpStatApp', null, [LearnRefNumber], 'FD_DateEmpStatApp_MA'

	from
		[Input].[LearnerEmploymentStatus]

	where
		DateEmpStatApp is null

--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for EmpStat is not between 1 and 2 characters long', 'EmpStat=''' + cast(EmpStat as varchar(255)) + ''',length=''' + cast(len(cast(EmpStat as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_EmpStat_AL'

	from
		[Input].[LearnerEmploymentStatus]

	where
		len(cast(EmpStat as varchar)) > 2


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for EmpId is not between 1 and 9 characters long', 'EmpId=''' + cast(EmpId as varchar(255)) + ''',length=''' + cast(len(cast(EmpId as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_EmpId_AL'

	from
		[Input].[LearnerEmploymentStatus]

	where
		len(cast(EmpId as varchar)) > 9


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for AgreeId is greater than the permitted length', 'AgreeId=''' + AgreeId + ''',length=''' + cast(len(AgreeId) as varchar(255))+'''', [LearnRefNumber], 'FD_AgreeId_AL'

	from
		[Input].[LearnerEmploymentStatus]

	where
		AgreeId is not null
		and len(AgreeId) > 6

go
--stored procedure to insert all invalid attributes for [Rulebase].EmploymentStatusMonitoring into VALFD_ValidationError table.
if object_id('[Rulebase].[FD_Validation_EmploymentStatusMonitoring]','p') is not null
	drop procedure [Rulebase].[FD_Validation_EmploymentStatusMonitoring]
go
create procedure [Rulebase].[FD_Validation_EmploymentStatusMonitoring] as
--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute ESMType', null, [LearnRefNumber], 'FD_ESMType_MA'

	from
		[Input].[EmploymentStatusMonitoring]

	where
		ESMType is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute ESMCode', null, [LearnRefNumber], 'FD_ESMCode_MA'

	from
		[Input].[EmploymentStatusMonitoring]

	where
		ESMCode is null

--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for ESMType is not between 1 and 3 characters long', 'ESMType=''' + cast(ESMType as varchar(255)) + ''',length=''' + cast(len(ESMType) as varchar(255))+'''', [LearnRefNumber], 'FD_ESMType_AL'

	from
		[Input].[EmploymentStatusMonitoring]

	where
		ESMType is not null
		and len(ESMType) not between 1 and 3


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for ESMCode is not between 1 and 2 characters long', 'ESMCode=''' + cast(ESMCode as varchar(255)) + ''',length=''' + cast(len(cast(ESMCode as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_ESMCode_AL'

	from
		[Input].[EmploymentStatusMonitoring]

	where
		len(cast(ESMCode as varchar)) > 2


	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The EmploymentStatusMonitoring has more than the maximum 7 occurrences', 'actual occurrences = ' + cast(count(*) as varchar(255)), min([LearnRefNumber]), 'FD_EmploymentStatusMonitoring_EO'

	from
		[Input].[EmploymentStatusMonitoring]

	group by
		LearnerEmploymentStatus_Id
	having
		count(*) > 7

go


--stored procedure to insert all invalid attributes for [Rulebase].LearnerHE into VALFD_ValidationError table.
if object_id('[Rulebase].[FD_Validation_LearnerHE]','p') is not null
	drop procedure [Rulebase].[FD_Validation_LearnerHE]
go
create procedure [Rulebase].[FD_Validation_LearnerHE] as
--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for UCASPERID is not between 1 and 10 characters long', 'UCASPERID=''' + cast(UCASPERID as varchar(255)) + ''',length=''' + cast(len(UCASPERID) as varchar(255))+'''', [LearnRefNumber], 'FD_UCASPERID_AL'

	from
		[Input].[LearnerHE]

	where
		UCASPERID is not null
		and len(UCASPERID) not between 1 and 10


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for TTACCOM is not 1 character long', 'TTACCOM=''' + cast(TTACCOM as varchar(255)) + ''',length=''' + cast(len(cast(TTACCOM as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_TTACCOM_AL'

	from
		[Input].[LearnerHE]

	where
		len(cast(TTACCOM as varchar)) > 1


--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for UCASPERID is not in the valid range 0000000001 to 9999999999', 'UCASPERID=''' + UCASPERID + '''', [LearnRefNumber], 'FD_UCASPERID_AR'

	from
		[Input].[LearnerHE]

	where
		isnumeric(UCASPERID) <> 0
		and
			(
				len(UCASPERID) > 10
				or cast(UCASPERID as bigint) not between 0000000001 and 9999999999
			)

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The LearnerHE has more than the maximum 1 occurrences', 'actual occurrences = ' + cast(count(*) as varchar(255)), min([LearnRefNumber]), 'FD_LearnerHE_EO'

	from
		[Input].[LearnerHE]

	group by
		Learner_Id
	having
		count(*) > 1

go
--stored procedure to insert all invalid attributes for [Rulebase].LearnerHEFinancialSupport into VALFD_ValidationError table.
if object_id('[Rulebase].[FD_Validation_LearnerHEFinancialSupport]','p') is not null
	drop procedure [Rulebase].[FD_Validation_LearnerHEFinancialSupport]
go
create procedure [Rulebase].[FD_Validation_LearnerHEFinancialSupport] as
--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute FINTYPE', null, [LearnRefNumber], 'FD_FINTYPE_MA'

	from
		[Input].[LearnerHEFinancialSupport]

	where
		FINTYPE is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute FINAMOUNT', null, [LearnRefNumber], 'FD_FINAMOUNT_MA'

	from
		[Input].[LearnerHEFinancialSupport]

	where
		FINAMOUNT is null

--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for FINTYPE is not 1 character long', 'FINTYPE=''' + cast(FINTYPE as varchar(255)) + ''',length=''' + cast(len(cast(FINTYPE as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_FINTYPE_AL'

	from
		[Input].[LearnerHEFinancialSupport]

	where
		len(cast(FINTYPE as varchar)) > 1


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for FINAMOUNT is not between 1 and 6 characters long', 'FINAMOUNT=''' + cast(FINAMOUNT as varchar(255)) + ''',length=''' + cast(len(cast(FINAMOUNT as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_FINAMOUNT_AL'

	from
		[Input].[LearnerHEFinancialSupport]

	where
		len(cast(FINAMOUNT as varchar)) > 6


--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for FINAMOUNT is not in the valid range 0 to 999999', 'FINAMOUNT=''' + cast(FINAMOUNT as varchar(255)) + '''', [LearnRefNumber], 'FD_FINAMOUNT_AR'

	from
		[Input].[LearnerHEFinancialSupport]

	where
		FINAMOUNT not between 0 and 999999

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The LearnerHEFinancialSupport has more than the maximum 4 occurrences', 'actual occurrences = ' + cast(count(*) as varchar(255)), min([LearnRefNumber]), 'FD_LearnerHEFinancialSupport_EO'

	from
		[Input].[LearnerHEFinancialSupport]

	group by
		LearnerHE_Id
	having
		count(*) > 4

go


--stored procedure to insert all invalid attributes for [Rulebase].LearningDelivery into VALFD_ValidationError table.
if object_id('[Rulebase].[FD_Validation_LearningDelivery]','p') is not null
	drop procedure [Rulebase].[FD_Validation_LearningDelivery]
go
create procedure [Rulebase].[FD_Validation_LearningDelivery] as
--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute LearnAimRef', null, [LearnRefNumber], 'FD_LearnAimRef_MA'

	from
		[Input].[LearningDelivery]

	where
		LearnAimRef is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute AimType', null, [LearnRefNumber], 'FD_AimType_MA'

	from
		[Input].[LearningDelivery]

	where
		AimType is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute AimSeqNumber', null, [LearnRefNumber], 'FD_AimSeqNumber_MA'

	from
		[Input].[LearningDelivery]

	where
		AimSeqNumber is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute LearnStartDate', null, [LearnRefNumber], 'FD_LearnStartDate_MA'

	from
		[Input].[LearningDelivery]

	where
		LearnStartDate is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute LearnPlanEndDate', null, [LearnRefNumber], 'FD_LearnPlanEndDate_MA'

	from
		[Input].[LearningDelivery]

	where
		LearnPlanEndDate is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute FundModel', null, [LearnRefNumber], 'FD_FundModel_MA'

	from
		[Input].[LearningDelivery]

	where
		FundModel is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute DelLocPostCode', null, [LearnRefNumber], 'FD_DelLocPostCode_MA'

	from
		[Input].[LearningDelivery]

	where
		DelLocPostCode is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute CompStatus', null, [LearnRefNumber], 'FD_CompStatus_MA'

	from
		[Input].[LearningDelivery]

	where
		CompStatus is null

--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for LearnAimRef is not between 1 and 8 characters long', 'LearnAimRef=''' + cast(LearnAimRef as varchar(255)) + ''',length=''' + cast(len(LearnAimRef) as varchar(255))+'''', [LearnRefNumber], 'FD_LearnAimRef_AL'

	from
		[Input].[LearningDelivery]

	where
		LearnAimRef is not null
		and len(LearnAimRef) not between 1 and 8


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for AimType is not 1 character long', 'AimType=''' + cast(AimType as varchar(255)) + ''',length=''' + cast(len(cast(AimType as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_AimType_AL'

	from
		[Input].[LearningDelivery]

	where
		len(cast(AimType as varchar)) > 1


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for AimSeqNumber is not between 1 and 2 characters long', 'AimSeqNumber=''' + cast(AimSeqNumber as varchar(255)) + ''',length=''' + cast(len(cast(AimSeqNumber as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_AimSeqNumber_AL'

	from
		[Input].[LearningDelivery]

	where
		len(cast(AimSeqNumber as varchar)) > 2


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for FundModel is not between 1 and 2 characters long', 'FundModel=''' + cast(FundModel as varchar(255)) + ''',length=''' + cast(len(cast(FundModel as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_FundModel_AL'

	from
		[Input].[LearningDelivery]

	where
		len(cast(FundModel as varchar)) > 2


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for ProgType is not between 1 and 2 characters long', 'ProgType=''' + cast(ProgType as varchar(255)) + ''',length=''' + cast(len(cast(ProgType as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_ProgType_AL'

	from
		[Input].[LearningDelivery]

	where
		len(cast(ProgType as varchar)) > 2


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for FworkCode is not between 1 and 3 characters long', 'FworkCode=''' + cast(FworkCode as varchar(255)) + ''',length=''' + cast(len(cast(FworkCode as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_FworkCode_AL'

	from
		[Input].[LearningDelivery]

	where
		len(cast(FworkCode as varchar)) > 3


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for PwayCode is not between 1 and 3 characters long', 'PwayCode=''' + cast(PwayCode as varchar(255)) + ''',length=''' + cast(len(cast(PwayCode as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_PwayCode_AL'

	from
		[Input].[LearningDelivery]

	where
		len(cast(PwayCode as varchar)) > 3


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for StdCode is not between 1 and 5 characters long', 'StdCode=''' + cast(StdCode as varchar(255)) + ''',length=''' + cast(len(cast(StdCode as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_StdCode_AL'

	from
		[Input].[LearningDelivery]

	where
		len(cast(StdCode as varchar)) > 5


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for PartnerUKPRN is not between 1 and 8 characters long', 'PartnerUKPRN=''' + cast(PartnerUKPRN as varchar(255)) + ''',length=''' + cast(len(cast(PartnerUKPRN as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_PartnerUKPRN_AL'

	from
		[Input].[LearningDelivery]

	where
		len(cast(PartnerUKPRN as varchar)) > 8


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for DelLocPostCode is not between 1 and 8 characters long', 'DelLocPostCode=''' + cast(DelLocPostCode as varchar(255)) + ''',length=''' + cast(len(DelLocPostCode) as varchar(255))+'''', [LearnRefNumber], 'FD_DelLocPostCode_AL'

	from
		[Input].[LearningDelivery]

	where
		DelLocPostCode is not null
		and len(DelLocPostCode) not between 1 and 8


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for AddHours is not between 1 and 4 characters long', 'AddHours=''' + cast(AddHours as varchar(255)) + ''',length=''' + cast(len(cast(AddHours as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_AddHours_AL'

	from
		[Input].[LearningDelivery]

	where
		len(cast(AddHours as varchar)) > 4


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for PriorLearnFundAdj is not between 1 and 2 characters long', 'PriorLearnFundAdj=''' + cast(PriorLearnFundAdj as varchar(255)) + ''',length=''' + cast(len(cast(PriorLearnFundAdj as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_PriorLearnFundAdj_AL'

	from
		[Input].[LearningDelivery]

	where
		len(cast(PriorLearnFundAdj as varchar)) > 2


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for OtherFundAdj is not between 1 and 3 characters long', 'OtherFundAdj=''' + cast(OtherFundAdj as varchar(255)) + ''',length=''' + cast(len(cast(OtherFundAdj as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_OtherFundAdj_AL'

	from
		[Input].[LearningDelivery]

	where
		len(cast(OtherFundAdj as varchar)) > 3


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for ConRefNumber is not between 1 and 20 characters long', 'ConRefNumber=''' + cast(ConRefNumber as varchar(255)) + ''',length=''' + cast(len(ConRefNumber) as varchar(255))+'''', [LearnRefNumber], 'FD_ConRefNumber_AL'

	from
		[Input].[LearningDelivery]

	where
		ConRefNumber is not null
		and len(ConRefNumber) not between 1 and 20


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for EPAOrgID is not between 1 and 7 characters long', 'EPAOrgID=''' + cast(EPAOrgID as varchar(255)) + ''',length=''' + cast(len(EPAOrgID) as varchar(255))+'''', [LearnRefNumber], 'FD_EPAOrgID_AL'

	from
		[Input].[LearningDelivery]

	where
		EPAOrgID is not null
		and len(EPAOrgID) not between 1 and 7


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for EmpOutcome is not 1 character long', 'EmpOutcome=''' + cast(EmpOutcome as varchar(255)) + ''',length=''' + cast(len(cast(EmpOutcome as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_EmpOutcome_AL'

	from
		[Input].[LearningDelivery]

	where
		len(cast(EmpOutcome as varchar)) > 1


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for CompStatus is not 1 character long', 'CompStatus=''' + cast(CompStatus as varchar(255)) + ''',length=''' + cast(len(cast(CompStatus as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_CompStatus_AL'

	from
		[Input].[LearningDelivery]

	where
		len(cast(CompStatus as varchar)) > 1


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for WithdrawReason is not between 1 and 2 characters long', 'WithdrawReason=''' + cast(WithdrawReason as varchar(255)) + ''',length=''' + cast(len(cast(WithdrawReason as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_WithdrawReason_AL'

	from
		[Input].[LearningDelivery]

	where
		len(cast(WithdrawReason as varchar)) > 2


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for Outcome is not 1 character long', 'Outcome=''' + cast(Outcome as varchar(255)) + ''',length=''' + cast(len(cast(Outcome as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_Outcome_AL'

	from
		[Input].[LearningDelivery]

	where
		len(cast(Outcome as varchar)) > 1


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for OutGrade is not between 1 and 6 characters long', 'OutGrade=''' + cast(OutGrade as varchar(255)) + ''',length=''' + cast(len(OutGrade) as varchar(255))+'''', [LearnRefNumber], 'FD_OutGrade_AL'

	from
		[Input].[LearningDelivery]

	where
		OutGrade is not null
		and len(OutGrade) not between 1 and 6


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for SWSupAimId is not between 1 and 36 characters long', 'SWSupAimId=''' + cast(SWSupAimId as varchar(255)) + ''',length=''' + cast(len(SWSupAimId) as varchar(255))+'''', [LearnRefNumber], 'FD_SWSupAimId_AL'

	from
		[Input].[LearningDelivery]

	where
		SWSupAimId is not null
		and len(SWSupAimId) not between 1 and 36


--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for AimSeqNumber is not in the valid range 1 to 98', 'AimSeqNumber=''' + cast(AimSeqNumber as varchar(255)) + '''', [LearnRefNumber], 'FD_AimSeqNumber_AR'

	from
		[Input].[LearningDelivery]

	where
		AimSeqNumber not between 1 and 98

--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for PartnerUKPRN is not in the valid range 10000000 to 99999999', 'PartnerUKPRN=''' + cast(PartnerUKPRN as varchar(255)) + '''', [LearnRefNumber], 'FD_PartnerUKPRN_AR'

	from
		[Input].[LearningDelivery]

	where
		PartnerUKPRN not between 10000000 and 99999999

--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for AddHours is not in the valid range 0 to 9999', 'AddHours=''' + cast(AddHours as varchar(255)) + '''', [LearnRefNumber], 'FD_AddHours_AR'

	from
		[Input].[LearningDelivery]

	where
		AddHours not between 0 and 9999

--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for PriorLearnFundAdj is not in the valid range 0 to 99', 'PriorLearnFundAdj=''' + cast(PriorLearnFundAdj as varchar(255)) + '''', [LearnRefNumber], 'FD_PriorLearnFundAdj_AR'

	from
		[Input].[LearningDelivery]

	where
		PriorLearnFundAdj not between 0 and 99

--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for OtherFundAdj is not in the valid range 0 to 999', 'OtherFundAdj=''' + cast(OtherFundAdj as varchar(255)) + '''', [LearnRefNumber], 'FD_OtherFundAdj_AR'

	from
		[Input].[LearningDelivery]

	where
		OtherFundAdj not between 0 and 999

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The LearningDelivery has less than the minimum 1 occurrence', 'actual occurences = 0', Learner.[LearnRefNumber], 'FD_LearningDelivery_EO'

	from
		[Input].[Learner]

	where
		not exists (
			select
				Learner_Id
			from
				Input.LearningDelivery
			where
				Learner.Learner_Id = LearningDelivery.Learner_Id
		)

go
--stored procedure to insert all invalid attributes for [Rulebase].LearningDeliveryFAM into VALFD_ValidationError table.
if object_id('[Rulebase].[FD_Validation_LearningDeliveryFAM]','p') is not null
	drop procedure [Rulebase].[FD_Validation_LearningDeliveryFAM]
go
create procedure [Rulebase].[FD_Validation_LearningDeliveryFAM] as
--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute LearnDelFAMType', null, [LearnRefNumber], 'FD_LearnDelFAMType_MA'

	from
		[Input].[LearningDeliveryFAM]

	where
		LearnDelFAMType is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute LearnDelFAMCode', null, [LearnRefNumber], 'FD_LearnDelFAMCode_MA'

	from
		[Input].[LearningDeliveryFAM]

	where
		LearnDelFAMCode is null

--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for LearnDelFAMType is not between 1 and 3 characters long', 'LearnDelFAMType=''' + cast(LearnDelFAMType as varchar(255)) + ''',length=''' + cast(len(LearnDelFAMType) as varchar(255))+'''', [LearnRefNumber], 'FD_LearnDelFAMType_AL'

	from
		[Input].[LearningDeliveryFAM]

	where
		LearnDelFAMType is not null
		and len(LearnDelFAMType) not between 1 and 3


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for LearnDelFAMCode is not between 1 and 5 characters long', 'LearnDelFAMCode=''' + cast(LearnDelFAMCode as varchar(255)) + ''',length=''' + cast(len(LearnDelFAMCode) as varchar(255))+'''', [LearnRefNumber], 'FD_LearnDelFAMCode_AL'

	from
		[Input].[LearningDeliveryFAM]

	where
		LearnDelFAMCode is not null
		and len(LearnDelFAMCode) not between 1 and 5


go

--stored procedure to insert all invalid attributes for [Rulebase].LearningDeliveryWorkPlacement into VALFD_ValidationError table.
if object_id('[Rulebase].[FD_Validation_LearningDeliveryWorkPlacement]','p') is not null
	drop procedure [Rulebase].[FD_Validation_LearningDeliveryWorkPlacement]
go
create procedure [Rulebase].[FD_Validation_LearningDeliveryWorkPlacement] as
--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute WorkPlaceStartDate', null, [LearnRefNumber], 'FD_WorkPlaceStartDate_MA'

	from
		[Input].[LearningDeliveryWorkPlacement]

	where
		WorkPlaceStartDate is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute WorkPlaceHours', null, [LearnRefNumber], 'FD_WorkPlaceHours_MA'

	from
		[Input].[LearningDeliveryWorkPlacement]

	where
		WorkPlaceHours is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute WorkPlaceMode', null, [LearnRefNumber], 'FD_WorkPlaceMode_MA'

	from
		[Input].[LearningDeliveryWorkPlacement]

	where
		WorkPlaceMode is null

--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for WorkPlaceHours is not between 1 and 4 characters long', 'WorkPlaceHours=''' + cast(WorkPlaceHours as varchar(255)) + ''',length=''' + cast(len(cast(WorkPlaceHours as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_WorkPlaceHours_AL'

	from
		[Input].[LearningDeliveryWorkPlacement]

	where
		len(cast(WorkPlaceHours as varchar)) > 4


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for WorkPlaceMode is not 1 character long', 'WorkPlaceMode=''' + cast(WorkPlaceMode as varchar(255)) + ''',length=''' + cast(len(cast(WorkPlaceMode as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_WorkPlaceMode_AL'

	from
		[Input].[LearningDeliveryWorkPlacement]

	where
		len(cast(WorkPlaceMode as varchar)) > 1


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for WorkPlaceEmpId is not between 1 and 9 characters long', 'WorkPlaceEmpId=''' + cast(WorkPlaceEmpId as varchar(255)) + ''',length=''' + cast(len(cast(WorkPlaceEmpId as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_WorkPlaceEmpId_AL'

	from
		[Input].[LearningDeliveryWorkPlacement]

	where
		len(cast(WorkPlaceEmpId as varchar)) > 9


--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for WorkPlaceHours is not in the valid range 1 to 9999', 'WorkPlaceHours=''' + cast(WorkPlaceHours as varchar(255)) + '''', [LearnRefNumber], 'FD_WorkPlaceHours_AR'

	from
		[Input].[LearningDeliveryWorkPlacement]

	where
		WorkPlaceHours not between 1 and 9999

go

--stored procedure to insert all invalid attributes for [Rulebase].AppFinRecord into VALFD_ValidationError table.
if object_id('[Rulebase].[FD_Validation_AppFinRecord]','p') is not null
	drop procedure [Rulebase].[FD_Validation_AppFinRecord]
go
create procedure [Rulebase].[FD_Validation_AppFinRecord] as
--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute AFinType', null, [LearnRefNumber], 'FD_AFinType_MA'

	from
		[Input].[AppFinRecord]

	where
		AFinType is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute AFinCode', null, [LearnRefNumber], 'FD_AFinCode_MA'

	from
		[Input].[AppFinRecord]

	where
		AFinCode is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute AFinDate', null, [LearnRefNumber], 'FD_AFinDate_MA'

	from
		[Input].[AppFinRecord]

	where
		AFinDate is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute AFinAmount', null, [LearnRefNumber], 'FD_AFinAmount_MA'

	from
		[Input].[AppFinRecord]

	where
		AFinAmount is null

--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for AFinType is not between 1 and 3 characters long', 'AFinType=''' + cast(AFinType as varchar(255)) + ''',length=''' + cast(len(AFinType) as varchar(255))+'''', [LearnRefNumber], 'FD_AFinType_AL'

	from
		[Input].[AppFinRecord]

	where
		AFinType is not null
		and len(AFinType) not between 1 and 3


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for AFinCode is not between 1 and 2 characters long', 'AFinCode=''' + cast(AFinCode as varchar(255)) + ''',length=''' + cast(len(cast(AFinCode as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_AFinCode_AL'

	from
		[Input].[AppFinRecord]

	where
		len(cast(AFinCode as varchar)) > 2


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for AFinAmount is not between 1 and 6 characters long', 'AFinAmount=''' + cast(AFinAmount as varchar(255)) + ''',length=''' + cast(len(cast(AFinAmount as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_AFinAmount_AL'

	from
		[Input].[AppFinRecord]

	where
		len(cast(AFinAmount as varchar)) > 6


--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for AFinAmount is not in the valid range 0 to 999999', 'AFinAmount=''' + cast(AFinAmount as varchar(255)) + '''', [LearnRefNumber], 'FD_AFinAmount_AR'

	from
		[Input].[AppFinRecord]

	where
		AFinAmount not between 0 and 999999

go

--stored procedure to insert all invalid attributes for [Rulebase].ProviderSpecDeliveryMonitoring into VALFD_ValidationError table.
if object_id('[Rulebase].[FD_Validation_ProviderSpecDeliveryMonitoring]','p') is not null
	drop procedure [Rulebase].[FD_Validation_ProviderSpecDeliveryMonitoring]
go
create procedure [Rulebase].[FD_Validation_ProviderSpecDeliveryMonitoring] as
--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute ProvSpecDelMonOccur', null, [LearnRefNumber], 'FD_ProvSpecDelMonOccur_MA'

	from
		[Input].[ProviderSpecDeliveryMonitoring]

	where
		ProvSpecDelMonOccur is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute ProvSpecDelMon', null, [LearnRefNumber], 'FD_ProvSpecDelMon_MA'

	from
		[Input].[ProviderSpecDeliveryMonitoring]

	where
		ProvSpecDelMon is null

--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for ProvSpecDelMonOccur is not 1 character long', 'ProvSpecDelMonOccur=''' + cast(ProvSpecDelMonOccur as varchar(255)) + ''',length=''' + cast(len(ProvSpecDelMonOccur) as varchar(255))+'''', [LearnRefNumber], 'FD_ProvSpecDelMonOccur_AL'

	from
		[Input].[ProviderSpecDeliveryMonitoring]

	where
		ProvSpecDelMonOccur is not null
		and len(ProvSpecDelMonOccur) <> 1


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for ProvSpecDelMon is not between 1 and 20 characters long', 'ProvSpecDelMon=''' + cast(ProvSpecDelMon as varchar(255)) + ''',length=''' + cast(len(ProvSpecDelMon) as varchar(255))+'''', [LearnRefNumber], 'FD_ProvSpecDelMon_AL'

	from
		[Input].[ProviderSpecDeliveryMonitoring]

	where
		ProvSpecDelMon is not null
		and len(ProvSpecDelMon) not between 1 and 20


	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		min([AimSeqNumber]), 'The ProviderSpecDeliveryMonitoring has more than the maximum 4 occurrences', 'actual occurrences = ' + cast(count(*) as varchar(255)), min([LearnRefNumber]), 'FD_ProviderSpecDeliveryMonitoring_EO'

	from
		[Input].[ProviderSpecDeliveryMonitoring]

	group by
		LearningDelivery_Id
	having
		count(*) > 4

go

--stored procedure to insert all invalid attributes for [Rulebase].LearningDeliveryHE into VALFD_ValidationError table.
if object_id('[Rulebase].[FD_Validation_LearningDeliveryHE]','p') is not null
	drop procedure [Rulebase].[FD_Validation_LearningDeliveryHE]
go
create procedure [Rulebase].[FD_Validation_LearningDeliveryHE] as
--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute TYPEYR', null, [LearnRefNumber], 'FD_TYPEYR_MA'

	from
		[Input].[LearningDeliveryHE]

	where
		TYPEYR is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute MODESTUD', null, [LearnRefNumber], 'FD_MODESTUD_MA'

	from
		[Input].[LearningDeliveryHE]

	where
		MODESTUD is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute FUNDLEV', null, [LearnRefNumber], 'FD_FUNDLEV_MA'

	from
		[Input].[LearningDeliveryHE]

	where
		FUNDLEV is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute FUNDCOMP', null, [LearnRefNumber], 'FD_FUNDCOMP_MA'

	from
		[Input].[LearningDeliveryHE]

	where
		FUNDCOMP is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute YEARSTU', null, [LearnRefNumber], 'FD_YEARSTU_MA'

	from
		[Input].[LearningDeliveryHE]

	where
		YEARSTU is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute MSTUFEE', null, [LearnRefNumber], 'FD_MSTUFEE_MA'

	from
		[Input].[LearningDeliveryHE]

	where
		MSTUFEE is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'A value has not been returned for the mandatory attribute SPECFEE', null, [LearnRefNumber], 'FD_SPECFEE_MA'

	from
		[Input].[LearningDeliveryHE]

	where
		SPECFEE is null

--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for NUMHUS is not between 1 and 20 characters long', 'NUMHUS=''' + cast(NUMHUS as varchar(255)) + ''',length=''' + cast(len(NUMHUS) as varchar(255))+'''', [LearnRefNumber], 'FD_NUMHUS_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		NUMHUS is not null
		and len(NUMHUS) not between 1 and 20


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for SSN is not between 1 and 13 characters long', 'SSN=''' + cast(SSN as varchar(255)) + ''',length=''' + cast(len(SSN) as varchar(255))+'''', [LearnRefNumber], 'FD_SSN_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		SSN is not null
		and len(SSN) not between 1 and 13


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for QUALENT3 is not between 1 and 3 characters long', 'QUALENT3=''' + cast(QUALENT3 as varchar(255)) + ''',length=''' + cast(len(QUALENT3) as varchar(255))+'''', [LearnRefNumber], 'FD_QUALENT3_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		QUALENT3 is not null
		and len(QUALENT3) not between 1 and 3


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for SOC2000 is not between 1 and 4 characters long', 'SOC2000=''' + cast(SOC2000 as varchar(255)) + ''',length=''' + cast(len(cast(SOC2000 as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_SOC2000_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		len(cast(SOC2000 as varchar)) > 4


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for SEC is not 1 character long', 'SEC=''' + cast(SEC as varchar(255)) + ''',length=''' + cast(len(cast(SEC as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_SEC_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		len(cast(SEC as varchar)) > 1


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for UCASAPPID is not between 1 and 9 characters long', 'UCASAPPID=''' + cast(UCASAPPID as varchar(255)) + ''',length=''' + cast(len(UCASAPPID) as varchar(255))+'''', [LearnRefNumber], 'FD_UCASAPPID_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		UCASAPPID is not null
		and len(UCASAPPID) not between 1 and 9


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for TYPEYR is not 1 character long', 'TYPEYR=''' + cast(TYPEYR as varchar(255)) + ''',length=''' + cast(len(cast(TYPEYR as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_TYPEYR_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		len(cast(TYPEYR as varchar)) > 1


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for MODESTUD is not between 1 and 2 characters long', 'MODESTUD=''' + cast(MODESTUD as varchar(255)) + ''',length=''' + cast(len(cast(MODESTUD as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_MODESTUD_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		len(cast(MODESTUD as varchar)) > 2


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for FUNDLEV is not between 1 and 2 characters long', 'FUNDLEV=''' + cast(FUNDLEV as varchar(255)) + ''',length=''' + cast(len(cast(FUNDLEV as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_FUNDLEV_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		len(cast(FUNDLEV as varchar)) > 2


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for FUNDCOMP is not 1 character long', 'FUNDCOMP=''' + cast(FUNDCOMP as varchar(255)) + ''',length=''' + cast(len(cast(FUNDCOMP as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_FUNDCOMP_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		len(cast(FUNDCOMP as varchar)) > 1


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for STULOAD does not have a length of 4,1', 'STULOAD=''' + convert(varchar(255), STULOAD, 128) + ''',length=''' + convert(varchar(255), STULOAD, 123)+'''', [LearnRefNumber], 'FD_STULOAD_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		len(cast(STULOAD as varchar)) > 4


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for YEARSTU is not between 1 and 2 characters long', 'YEARSTU=''' + cast(YEARSTU as varchar(255)) + ''',length=''' + cast(len(cast(YEARSTU as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_YEARSTU_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		len(cast(YEARSTU as varchar)) > 2


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for MSTUFEE is not between 1 and 2 characters long', 'MSTUFEE=''' + cast(MSTUFEE as varchar(255)) + ''',length=''' + cast(len(cast(MSTUFEE as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_MSTUFEE_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		len(cast(MSTUFEE as varchar)) > 2


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for PCOLAB does not have a length of 4,1', 'PCOLAB=''' + convert(varchar(255), PCOLAB, 128) + ''',length=''' + convert(varchar(255), PCOLAB, 123)+'''', [LearnRefNumber], 'FD_PCOLAB_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		len(cast(PCOLAB as varchar)) > 4


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for PCFLDCS does not have a length of 4,1', 'PCFLDCS=''' + convert(varchar(255), PCFLDCS, 128) + ''',length=''' + convert(varchar(255), PCFLDCS, 123)+'''', [LearnRefNumber], 'FD_PCFLDCS_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		len(cast(PCFLDCS as varchar)) > 4


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for PCSLDCS does not have a length of 4,1', 'PCSLDCS=''' + convert(varchar(255), PCSLDCS, 128) + ''',length=''' + convert(varchar(255), PCSLDCS, 123)+'''', [LearnRefNumber], 'FD_PCSLDCS_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		len(cast(PCSLDCS as varchar)) > 4


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for PCTLDCS does not have a length of 4,1', 'PCTLDCS=''' + convert(varchar(255), PCTLDCS, 128) + ''',length=''' + convert(varchar(255), PCTLDCS, 123)+'''', [LearnRefNumber], 'FD_PCTLDCS_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		len(cast(PCTLDCS as varchar)) > 4


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for SPECFEE is not 1 character long', 'SPECFEE=''' + cast(SPECFEE as varchar(255)) + ''',length=''' + cast(len(cast(SPECFEE as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_SPECFEE_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		len(cast(SPECFEE as varchar)) > 1


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for NETFEE is not between 1 and 6 characters long', 'NETFEE=''' + cast(NETFEE as varchar(255)) + ''',length=''' + cast(len(cast(NETFEE as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_NETFEE_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		len(cast(NETFEE as varchar)) > 6


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for GROSSFEE is not between 1 and 6 characters long', 'GROSSFEE=''' + cast(GROSSFEE as varchar(255)) + ''',length=''' + cast(len(cast(GROSSFEE as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_GROSSFEE_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		len(cast(GROSSFEE as varchar)) > 6


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for DOMICILE is not between 1 and 2 characters long', 'DOMICILE=''' + cast(DOMICILE as varchar(255)) + ''',length=''' + cast(len(DOMICILE) as varchar(255))+'''', [LearnRefNumber], 'FD_DOMICILE_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		DOMICILE is not null
		and len(DOMICILE) not between 1 and 2


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for ELQ is not 1 character long', 'ELQ=''' + cast(ELQ as varchar(255)) + ''',length=''' + cast(len(cast(ELQ as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_ELQ_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		len(cast(ELQ as varchar)) > 1


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for HEPostCode is not between 1 and 8 characters long', 'HEPostCode=''' + cast(HEPostCode as varchar(255)) + ''',length=''' + cast(len(HEPostCode) as varchar(255))+'''', [LearnRefNumber], 'FD_HEPostCode_AL'

	from
		[Input].[LearningDeliveryHE]

	where
		HEPostCode is not null
		and len(HEPostCode) not between 1 and 8


--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for STULOAD is not in the valid range 0.1 to 300.0', 'STULOAD=''' + convert(varchar(255), STULOAD, 128) + '''', [LearnRefNumber], 'FD_STULOAD_AR'

	from
		[Input].[LearningDeliveryHE]

	where
		STULOAD not between 0.1 and 300.0

--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for YEARSTU is not in the valid range 1 to 98', 'YEARSTU=''' + cast(YEARSTU as varchar(255)) + '''', [LearnRefNumber], 'FD_YEARSTU_AR'

	from
		[Input].[LearningDeliveryHE]

	where
		YEARSTU not between 1 and 98

--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for PCOLAB is not in the valid range 0.1 to 100.0', 'PCOLAB=''' + convert(varchar(255), PCOLAB, 128) + '''', [LearnRefNumber], 'FD_PCOLAB_AR'

	from
		[Input].[LearningDeliveryHE]

	where
		PCOLAB not between 0.1 and 100.0

--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for PCFLDCS is not in the valid range 0 to 100.0', 'PCFLDCS=''' + convert(varchar(255), PCFLDCS, 128) + '''', [LearnRefNumber], 'FD_PCFLDCS_AR'

	from
		[Input].[LearningDeliveryHE]

	where
		PCFLDCS not between 0 and 100.0

--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for PCSLDCS is not in the valid range 0 to 100.0', 'PCSLDCS=''' + convert(varchar(255), PCSLDCS, 128) + '''', [LearnRefNumber], 'FD_PCSLDCS_AR'

	from
		[Input].[LearningDeliveryHE]

	where
		PCSLDCS not between 0 and 100.0

--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for PCTLDCS is not in the valid range 0 to 100.0', 'PCTLDCS=''' + convert(varchar(255), PCTLDCS, 128) + '''', [LearnRefNumber], 'FD_PCTLDCS_AR'

	from
		[Input].[LearningDeliveryHE]

	where
		PCTLDCS not between 0 and 100.0

--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for NETFEE is not in the valid range 0 to 999999', 'NETFEE=''' + cast(NETFEE as varchar(255)) + '''', [LearnRefNumber], 'FD_NETFEE_AR'

	from
		[Input].[LearningDeliveryHE]

	where
		NETFEE not between 0 and 999999

--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		[AimSeqNumber], 'The value returned for GROSSFEE is not in the valid range 0 to 999999', 'GROSSFEE=''' + cast(GROSSFEE as varchar(255)) + '''', [LearnRefNumber], 'FD_GROSSFEE_AR'

	from
		[Input].[LearningDeliveryHE]

	where
		GROSSFEE not between 0 and 999999

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		min([AimSeqNumber]), 'The LearningDeliveryHE has more than the maximum 1 occurrences', 'actual occurrences = ' + cast(count(*) as varchar(255)), min([LearnRefNumber]), 'FD_LearningDeliveryHE_EO'

	from
		[Input].[LearningDeliveryHE]

	group by
		LearningDelivery_Id
	having
		count(*) > 1

go


--stored procedure to insert all invalid attributes for [Rulebase].LearnerDestinationandProgression into VALFD_ValidationError table.
if object_id('[Rulebase].[FD_Validation_LearnerDestinationandProgression]','p') is not null
	drop procedure [Rulebase].[FD_Validation_LearnerDestinationandProgression]
go
create procedure [Rulebase].[FD_Validation_LearnerDestinationandProgression] as
--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute LearnRefNumber', null, [LearnRefNumber], 'FD_DP_LearnRefNumber_MA'

	from
		[Input].[LearnerDestinationandProgression]

	where
		LearnRefNumber is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute ULN', null, [LearnRefNumber], 'FD_DP_ULN_MA'

	from
		[Input].[LearnerDestinationandProgression]

	where
		ULN is null

--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for LearnRefNumber is not between 1 and 12 characters long', 'LearnRefNumber=''' + cast(LearnRefNumber as varchar(255)) + ''',length=''' + cast(len(LearnRefNumber) as varchar(255))+'''', [LearnRefNumber], 'FD_DP_LearnRefNumber_AL'

	from
		[Input].[LearnerDestinationandProgression]

	where
		LearnRefNumber is not null
		and len(LearnRefNumber) not between 1 and 12


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for ULN is not between 1 and 10 characters long', 'ULN=''' + cast(ULN as varchar(255)) + ''',length=''' + cast(len(cast(ULN as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_DP_ULN_AL'

	from
		[Input].[LearnerDestinationandProgression]

	where
		len(cast(ULN as varchar)) > 10


--Insert statement that inserts all attributes where their value is outside of the specified range
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for ULN is not in the valid range 1000000000 to 9999999999', 'ULN=''' + cast(ULN as varchar(255)) + '''', [LearnRefNumber], 'FD_DP_ULN_AR'

	from
		[Input].[LearnerDestinationandProgression]

	where
		ULN not between 1000000000 and 9999999999

go
--stored procedure to insert all invalid attributes for [Rulebase].DPOutcome into VALFD_ValidationError table.
if object_id('[Rulebase].[FD_Validation_DPOutcome]','p') is not null
	drop procedure [Rulebase].[FD_Validation_DPOutcome]
go
create procedure [Rulebase].[FD_Validation_DPOutcome] as
--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute OutType', null, [LearnRefNumber], 'FD_DP_OutType_MA'

	from
		[Input].[DPOutcome]

	where
		OutType is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute OutCode', null, [LearnRefNumber], 'FD_DP_OutCode_MA'

	from
		[Input].[DPOutcome]

	where
		OutCode is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute OutStartDate', null, [LearnRefNumber], 'FD_DP_OutStartDate_MA'

	from
		[Input].[DPOutcome]

	where
		OutStartDate is null

--Insert statement for the mandatory attributes where the attribute has not been returned
	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'A value has not been returned for the mandatory attribute OutCollDate', null, [LearnRefNumber], 'FD_DP_OutCollDate_MA'

	from
		[Input].[DPOutcome]

	where
		OutCollDate is null

--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for OutType is not between 1 and 3 characters long', 'OutType=''' + cast(OutType as varchar(255)) + ''',length=''' + cast(len(OutType) as varchar(255))+'''', [LearnRefNumber], 'FD_DP_OutType_AL'

	from
		[Input].[DPOutcome]

	where
		OutType is not null
		and len(OutType) not between 1 and 3


--Insert statement that inserts all the attribute values where their length is outside the specified length.

	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The value returned for OutCode is not between 1 and 3 characters long', 'OutCode=''' + cast(OutCode as varchar(255)) + ''',length=''' + cast(len(cast(OutCode as varchar(255))) as varchar(255))+'''', [LearnRefNumber], 'FD_DP_OutCode_AL'

	from
		[Input].[DPOutcome]

	where
		len(cast(OutCode as varchar)) > 3


	insert into
		[Rulebase].[VALFD_ValidationError] (AimSeqNumber, ErrorString, FieldValues, LearnRefNumber, RuleId)

	select
		null, 'The DPOutcome has less than the minimum 1 occurrence', 'actual occurences = 0', LearnerDestinationandProgression.[LearnRefNumber], 'FD_DP_DPOutcome_EO'

	from
		[Input].[LearnerDestinationandProgression]

	where
		not exists (
			select
				LearnerDestinationandProgression_Id
			from
				Input.DPOutcome
			where
				LearnerDestinationandProgression.LearnerDestinationandProgression_Id = DPOutcome.LearnerDestinationandProgression_Id
		)

go



if object_id('Rulebase.FD_Validation_Execute','p') is not null
	drop procedure Rulebase.FD_Validation_Execute
go
create procedure Rulebase.FD_Validation_Execute
as
	exec [Rulebase].[FD_Validation_Learner]
	exec [Rulebase].[FD_Validation_ContactPreference]
	exec [Rulebase].[FD_Validation_LLDDandHealthProblem]
	exec [Rulebase].[FD_Validation_LearnerFAM]
	exec [Rulebase].[FD_Validation_ProviderSpecLearnerMonitoring]
	exec [Rulebase].[FD_Validation_LearnerEmploymentStatus]
	exec [Rulebase].[FD_Validation_EmploymentStatusMonitoring]
	exec [Rulebase].[FD_Validation_LearnerHE]
	exec [Rulebase].[FD_Validation_LearnerHEFinancialSupport]
	exec [Rulebase].[FD_Validation_LearningDelivery]
	exec [Rulebase].[FD_Validation_LearningDeliveryFAM]
	exec [Rulebase].[FD_Validation_LearningDeliveryWorkPlacement]
	exec [Rulebase].[FD_Validation_AppFinRecord]
	exec [Rulebase].[FD_Validation_ProviderSpecDeliveryMonitoring]
	exec [Rulebase].[FD_Validation_LearningDeliveryHE]
	exec [Rulebase].[FD_Validation_LearnerDestinationandProgression]
	exec [Rulebase].[FD_Validation_DPOutcome]
go
