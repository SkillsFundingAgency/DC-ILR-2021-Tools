//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EasyOPA.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EasyOPA.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply a simple filter to reduce a long list... 
        ///ID &quot;Ends With&quot; and Address &quot;Contains&quot;..
        /// </summary>
        internal static string ApplyFilterExplanationText {
            get {
                return ResourceManager.GetString("ApplyFilterExplanationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can select from the list of available providers below. Being selective by reducing a large list will improve the overall process time. You also have the facility to export selected data sets to ILR XML..
        /// </summary>
        internal static string AvailableProvidersExplanationText {
            get {
                return ResourceManager.GetString("AvailableProvidersExplanationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available Providers.
        /// </summary>
        internal static string AvailableProvidersText {
            get {
                return ResourceManager.GetString("AvailableProvidersText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can select from the list of enabled items below. If there is something you can&apos;t select; it&apos;s probably because it&apos;s not pertinent to the collection being tested..
        /// </summary>
        internal static string AvailableRulesExplanationText {
            get {
                return ResourceManager.GetString("AvailableRulesExplanationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available Rules.
        /// </summary>
        internal static string AvailableRulesText {
            get {
                return ResourceManager.GetString("AvailableRulesText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking Active SQL Instance details for validity @{0}.
        /// </summary>
        internal static string CheckingActiveSQLInstance {
            get {
                return ResourceManager.GetString("CheckingActiveSQLInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection Timeouts.
        /// </summary>
        internal static string ConnectionTimeoutHeaderText {
            get {
                return ResourceManager.GetString("ConnectionTimeoutHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In the unlikely event you have connection timeout issues, you can adjust the total timeout period here. The number is displayed in minutes..
        /// </summary>
        internal static string ConnectionTimeoutText {
            get {
                return ResourceManager.GetString("ConnectionTimeoutText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deposit rulebase artefacts to disk.
        /// </summary>
        internal static string DepositRulebaseArtefactsHeaderText {
            get {
                return ResourceManager.GetString("DepositRulebaseArtefactsHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling this option will create files and folders containing the XDS files used by the rulebase. Use for rulebase debugging..
        /// </summary>
        internal static string DepositRulebaseArtefactsText {
            get {
                return ResourceManager.GetString("DepositRulebaseArtefactsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Core Operations.
        /// </summary>
        internal static string EasyOPACoreOperationsHeaderText {
            get {
                return ResourceManager.GetString("EasyOPACoreOperationsHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exporting selected input source to file @{0}.
        /// </summary>
        internal static string ExportingToFile {
            get {
                return ResourceManager.GetString("ExportingToFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export To File.
        /// </summary>
        internal static string ExportToFileHeaderText {
            get {
                return ResourceManager.GetString("ExportToFileHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include.
        /// </summary>
        internal static string IsSelectedForProcessingHeaderText {
            get {
                return ResourceManager.GetString("IsSelectedForProcessingHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can manage your SQL Server instance information, source data selection and bulk loading operations from here..
        /// </summary>
        internal static string PreparationExplanationText {
            get {
                return ResourceManager.GetString("PreparationExplanationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prepare.
        /// </summary>
        internal static string PrepareButtonText {
            get {
                return ResourceManager.GetString("PrepareButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preserve.
        /// </summary>
        internal static string PreserveButtonText {
            get {
                return ResourceManager.GetString("PreserveButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can preserve any data changes made to an input source to an appropriate ILR file here. To enable this functionality; select an item from the list above..
        /// </summary>
        internal static string PreserveSourceExplanationText {
            get {
                return ResourceManager.GetString("PreserveSourceExplanationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Address.
        /// </summary>
        internal static string ProviderAddressHeaderText {
            get {
                return ResourceManager.GetString("ProviderAddressHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provider.
        /// </summary>
        internal static string ProviderIDHeaderText {
            get {
                return ResourceManager.GetString("ProviderIDHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Learners.
        /// </summary>
        internal static string ProviderLearnerCountHeaderText {
            get {
                return ResourceManager.GetString("ProviderLearnerCountHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Return Period.
        /// </summary>
        internal static string ReturnPeriodHeaderText {
            get {
                return ResourceManager.GetString("ReturnPeriodHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some submissions may require you to set a &apos;return period&apos; for cross year testing. You can do this here..
        /// </summary>
        internal static string ReturnPeriodText {
            get {
                return ResourceManager.GetString("ReturnPeriodText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run.
        /// </summary>
        internal static string RunButtonText {
            get {
                return ResourceManager.GetString("RunButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Once you&apos;ve selected an input file or data valid source and the rules you wish the submission to be against; you can click Run..
        /// </summary>
        internal static string RunExplanationText {
            get {
                return ResourceManager.GetString("RunExplanationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select All.
        /// </summary>
        internal static string SelectAllText {
            get {
                return ResourceManager.GetString("SelectAllText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have selected {0} provider(s) for processing. ({1}).
        /// </summary>
        internal static string SelectedProvidersInformationText {
            get {
                return ResourceManager.GetString("SelectedProvidersInformationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0},
        ///{1},
        ///{2},
        ///{3}.
        /// </summary>
        internal static string SelectedProvidersNameFormatText {
            get {
                return ResourceManager.GetString("SelectedProvidersNameFormatText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have selected {0} rule(s) for use. ({1}).
        /// </summary>
        internal static string SelectedRulesInformationText {
            get {
                return ResourceManager.GetString("SelectedRulesInformationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ({0}) {1} ({2}, {3}).
        /// </summary>
        internal static string SelectedRulesNameFormatText {
            get {
                return ResourceManager.GetString("SelectedRulesNameFormatText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Input File.
        /// </summary>
        internal static string SelectInputFileButtonText {
            get {
                return ResourceManager.GetString("SelectInputFileButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alternatively, you can select a file and load it to a new source ready to run any designated rules against it...
        /// </summary>
        internal static string SelectInputFileExplanationText {
            get {
                return ResourceManager.GetString("SelectInputFileExplanationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Input File.
        /// </summary>
        internal static string SelectInputFileHeaderText {
            get {
                return ResourceManager.GetString("SelectInputFileHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Providers.
        /// </summary>
        internal static string SelectProvidersButtonText {
            get {
                return ResourceManager.GetString("SelectProvidersButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can adjust the number of providers you want to be processed here..
        /// </summary>
        internal static string SelectProvidersExplanationText {
            get {
                return ResourceManager.GetString("SelectProvidersExplanationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Rules.
        /// </summary>
        internal static string SelectRulesButtonText {
            get {
                return ResourceManager.GetString("SelectRulesButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the set of rules you want the input data to be run against..
        /// </summary>
        internal static string SelectRulesExplanationText {
            get {
                return ResourceManager.GetString("SelectRulesExplanationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a data source from the list. Each source&apos;s credentials have been verified for collection type and year..
        /// </summary>
        internal static string SelectSourceExplanationText {
            get {
                return ResourceManager.GetString("SelectSourceExplanationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available data sources.
        /// </summary>
        internal static string SelectSourceHeaderText {
            get {
                return ResourceManager.GetString("SelectSourceHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the name of the SQL server instance you wish to use. Click the refresh button to load..
        /// </summary>
        internal static string SetSQLServerExplanationText {
            get {
                return ResourceManager.GetString("SetSQLServerExplanationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active SQL Instance.
        /// </summary>
        internal static string SetSQLServerHeaderText {
            get {
                return ResourceManager.GetString("SetSQLServerHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch Run Mode.
        /// </summary>
        internal static string SwitchRunModeHeaderText {
            get {
                return ResourceManager.GetString("SwitchRunModeHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch between Full and Lite operation. (ON is Lite).
        /// </summary>
        internal static string SwitchRunModeText {
            get {
                return ResourceManager.GetString("SwitchRunModeText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to too many to display.
        /// </summary>
        internal static string TooManyToDisplayText {
            get {
                return ResourceManager.GetString("TooManyToDisplayText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Experimental Items.
        /// </summary>
        internal static string UseExperimentalItemsHeaderText {
            get {
                return ResourceManager.GetString("UseExperimentalItemsHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you have any experimental scripts or rulebases your want to try..
        /// </summary>
        internal static string UseExperimentalItemsText {
            get {
                return ResourceManager.GetString("UseExperimentalItemsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Source For Results.
        /// </summary>
        internal static string UseSourceForResultsHeaderText {
            get {
                return ResourceManager.GetString("UseSourceForResultsHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the data source to hold the results of your tests. Does not support results aggregation..
        /// </summary>
        internal static string UseSourceForResultsText {
            get {
                return ResourceManager.GetString("UseSourceForResultsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You don&apos;t have any providers selected for processing..
        /// </summary>
        internal static string YouHaveNoProvidersSelectedText {
            get {
                return ResourceManager.GetString("YouHaveNoProvidersSelectedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You don&apos;t have any rules selected for use..
        /// </summary>
        internal static string YouHaveNoRulesSelectedText {
            get {
                return ResourceManager.GetString("YouHaveNoRulesSelectedText", resourceCulture);
            }
        }
    }
}
